#!/usr/bin/env python3

import sys
import re

def main(args):
  paths = args[1:]
  for in_path in paths:
    assert in_path.endswith('.mjs')
    out_path = in_path[:-len('.mjs')] + '.js'
    with open(in_path, 'rb') as fin:
      text = fin.read()

    text = re.sub(rb"import (\w+) from '([A-Za-z./_]*)\.m?js';", rb"const \1 = require('\2.js');", text)
    text = re.sub(rb"import (\{[^}]*\}) from '([A-Za-z./_]*)\.m?js';", rb"const \1 = require('\2.js');", text)
    text = re.sub(rb"import '([A-Za-z./_]*)\.m?js';", rb"require('\1.js');", text)
    text = re.sub(rb"import (\w+) from '([A-Za-z./_]*)';", rb"const \1 = require('\2');", text)
    text = re.sub(rb"import (\{[^}]*\}) from '([A-Za-z./_]*)';", rb"const \1 = require('\2');", text)
    text = re.sub(rb"import '([A-Za-z./_]*)';", rb"require('\1.js');", text)


    exports = []
    for m in re.finditer(rb"export (?:(?:const)|(?:async)|(?:function)|(?:class)|\W)*(\w+)", text):
      exports.append(m.group(1))
    text = text.replace(b'export ', b'')
    text += b'\n'.join('exports.{name} = {name};'.format(name=name).encode('utf-8') for name in exports)

    with open(out_path, 'wb') as fout:
      fout.write(text)

  return 0

if __name__ == '__main__':
  sys.exit(main(sys.argv))
